apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-setup-script
  namespace: minio-system
data:
  setup.sh: |
    #!/bin/bash
    set -e
    
    echo "🏦 ACME Payments Inc. - Setting up FinOps Compliance Storage"
    echo "============================================================"
    
    # Wait for MinIO to be ready
    echo "⏳ Waiting for MinIO to be ready..."
    until mc alias set minio http://minio-api:9000 admin password123; do
      echo "Waiting for MinIO..."
      sleep 5
    done
    
    echo "✅ MinIO is ready"
    
    # Create bucket for exemptions
    echo "📦 Creating exemptions bucket..."
    mc mb minio/acme-finops-exemptions --ignore-existing
    
    # Set bucket policy to allow read access
    echo "🔐 Setting bucket policy..."
    cat > /tmp/policy.json << 'EOF'
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Effect": "Allow",
          "Principal": {"AWS": ["*"]},
          "Action": ["s3:GetObject"],
          "Resource": ["arn:aws:s3:::acme-finops-exemptions/*"]
        }
      ]
    }
    EOF
    mc anonymous set-json /tmp/policy.json minio/acme-finops-exemptions
    
    # Upload exemption data
    echo "📄 Uploading exemption configurations..."
    
    # Create loose enforcement exemptions
    cat > /tmp/loose-exemptions.json << 'EOF'
    {
      "permanent_exemptions": {
        "monitoring/legacy-prometheus": {
          "reason": "Legacy monitoring system - migration planned for Q2 2025",
          "approved_by": "finops-team@acmepayments.com",
          "approval_date": "2025-01-15",
          "cost_impact": "medium",
          "review_date": "2025-04-15",
          "ticket": "FINOPS-1234"
        },
        "logging/fluentd-legacy": {
          "reason": "Critical logging infrastructure - requires careful migration planning",
          "approved_by": "platform-team@acmepayments.com",
          "approval_date": "2025-01-15",
          "cost_impact": "low",
          "review_date": "2025-03-15",
          "ticket": "PLAT-1235"
        },
        "opa-loose-demo/test-non-compliant-app": {
          "reason": "Demo deployment for exemption testing - can be updated for demonstration",
          "approved_by": "demo-team@acmepayments.com",
          "approval_date": "2025-01-23",
          "cost_impact": "none",
          "review_date": "2025-02-23",
          "ticket": "DEMO-1001"
        }
      },
      "time_based_exemptions": {
        "development/test-app": {
          "expires_at": "2025-02-15T10:00:00Z",
          "reason": "Temporary exemption for testing new deployment pipeline",
          "approved_by": "dev-team-lead@acmepayments.com",
          "approval_date": "2025-01-20",
          "cost_impact": "low",
          "ticket": "DEV-5678"
        },
        "staging/migration-app": {
          "expires_at": "2025-01-31T23:59:59Z",
          "reason": "Migration testing in progress",
          "approved_by": "migration-team@acmepayments.com",
          "approval_date": "2025-01-22",
          "cost_impact": "medium",
          "ticket": "MIG-9999"
        }
      },
      "existing_deployments": {
        "default/nginx-existing-legacy": {
          "reason": "Pre-existing deployment before FinOps policy implementation",
          "grandfathered_date": "2024-12-01",
          "migration_deadline": "2025-06-01",
          "cost_impact": "high"
        },
        "production/legacy-api": {
          "reason": "Critical payment processing API - requires coordinated migration",
          "grandfathered_date": "2024-12-01",
          "migration_deadline": "2025-08-01",
          "cost_impact": "critical"
        }
      }
    }
    EOF
    
    mc cp /tmp/loose-exemptions.json minio/acme-finops-exemptions/loose-enforcement/exemptions.json
    
    # Create strict enforcement exemptions
    cat > /tmp/strict-exemptions.json << 'EOF'
    {
      "permanent_exemptions": {
        "monitoring/critical-prometheus": {
          "reason": "Critical monitoring system - approved by security and FinOps teams",
          "approved_by": "security-team@acmepayments.com",
          "approval_date": "2025-01-15",
          "cost_impact": "justified",
          "review_date": "2025-04-15",
          "ticket": "SEC-9999",
          "justification": "Critical infrastructure component for payment processing monitoring"
        },
        "opa-strict-demo/test-non-compliant-app": {
          "reason": "Demo deployment for exemption testing - strict mode demonstration",
          "approved_by": "demo-team@acmepayments.com",
          "approval_date": "2025-01-23",
          "cost_impact": "none",
          "review_date": "2025-02-23",
          "ticket": "DEMO-1002",
          "justification": "Required for demonstrating exemption functionality in strict mode"
        }
      },
      "time_based_exemptions": {
        "production/emergency-hotfix": {
          "expires_at": "2025-01-25T10:00:00Z",
          "reason": "Emergency production hotfix during payment processing incident",
          "approved_by": "incident-commander@acmepayments.com",
          "approval_date": "2025-01-23",
          "cost_impact": "emergency",
          "ticket": "INC-12345"
        }
      },
      "existing_deployments": {}
    }
    EOF
    
    mc cp /tmp/strict-exemptions.json minio/acme-finops-exemptions/strict-enforcement/exemptions.json
    
    echo "✅ MinIO setup completed successfully!"
    echo "🌐 MinIO Console available at: http://localhost:30001"
    echo "🔑 Login: admin / password123"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-setup
  namespace: minio-system
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: minio-setup
        image: minio/mc:RELEASE.2024-01-16T16-06-34Z
        command: ["/bin/bash", "/scripts/setup.sh"]
        volumeMounts:
        - name: setup-script
          mountPath: /scripts
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: setup-script
        configMap:
          name: minio-setup-script
          defaultMode: 0755
