#!/bin/bash

# ACME Payments Inc. - Correct Loose vs Strict Mode Demo
# Demonstrates the proper rolling deployment strategy

set -e

echo "üè¶ ACME Payments Inc. - Correct Loose vs Strict Mode Demo"
echo "========================================================="
echo "Demonstrating proper rolling deployment strategy for FinOps policies"
echo ""

# Function to show section headers
show_section() {
    echo ""
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo "üéØ $1"
    echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
    echo ""
}

show_section "LOOSE MODE: Rolling Deployment Strategy"

echo "üìã Loose Mode Behavior:"
echo "======================="
echo "‚úÖ Allows UPDATES to existing deployments (even if non-compliant)"
echo "‚ùå Blocks CREATE of new deployments that are non-compliant"
echo "üí° Purpose: Enables gradual rollout without breaking existing workloads"
echo ""

echo "üîß Setting up loose mode test..."

# Ensure loose constraint is deployed
if ! kubectl get assetuuidrequiredsimple deployment-asset-uuid-simple &>/dev/null; then
    kubectl apply -f scenarios/loose-enforcement/opa/simple-constraint-template.yaml
    kubectl wait --for=condition=Established crd/assetuuidrequiredsimple.constraints.gatekeeper.sh --timeout=60s
    kubectl apply -f scenarios/loose-enforcement/opa/simple-constraint.yaml
fi

echo "‚úÖ Loose mode constraint active"
echo ""

echo "Test 1: CREATE new compliant deployment (should succeed)"
echo "-------------------------------------------------------"
if kubectl apply -f test-deployments/compliant-deployment.yaml -n opa-loose-demo --dry-run=server &>/dev/null; then
    echo "‚úÖ PASS - New compliant deployment allowed"
else
    echo "‚ùå FAIL - New compliant deployment blocked"
fi

echo ""
echo "Test 2: CREATE new non-compliant deployment (should fail)"
echo "--------------------------------------------------------"
if kubectl create deployment loose-test-bad --image=nginx -n opa-loose-demo --dry-run=server &>/dev/null; then
    echo "‚ùå FAIL - New non-compliant deployment was allowed"
else
    echo "‚úÖ PASS - New non-compliant deployment blocked"
    echo "üìã This prevents new technical debt from being introduced"
fi

echo ""
echo "Test 3: UPDATE existing non-compliant deployment (should succeed)"
echo "----------------------------------------------------------------"
current_replicas=$(kubectl get deployment test-non-compliant-app -n opa-loose-demo -o jsonpath='{.spec.replicas}' 2>/dev/null || echo "1")
new_replicas=$((current_replicas + 1))

if kubectl patch deployment test-non-compliant-app -n opa-loose-demo -p "{\"spec\":{\"replicas\":$new_replicas}}" &>/dev/null; then
    echo "‚úÖ PASS - Existing non-compliant deployment can be updated"
    echo "üìã This allows operations teams to maintain existing workloads"
else
    echo "‚ùå FAIL - Existing non-compliant deployment update blocked"
fi

show_section "STRICT MODE: Full Enforcement"

echo "üìã Strict Mode Behavior:"
echo "========================"
echo "‚ùå Blocks CREATE of new deployments that are non-compliant"
echo "‚ùå Blocks UPDATE of existing deployments that are non-compliant"
echo "üí° Purpose: Full enforcement after migration period is complete"
echo ""

echo "üîß Setting up strict mode test..."

# Ensure strict constraint is deployed
if ! kubectl get assetuuidrequiredstrictsimple deployment-asset-uuid-strict-simple &>/dev/null; then
    kubectl apply -f scenarios/strict-enforcement/opa/simple-constraint-template.yaml
    kubectl wait --for=condition=Established crd/assetuuidrequiredstrictsimple.constraints.gatekeeper.sh --timeout=60s
    kubectl apply -f scenarios/strict-enforcement/opa/simple-constraint.yaml
fi

echo "‚úÖ Strict mode constraint active"
echo ""

echo "Test 4: CREATE new compliant deployment in strict mode (should succeed)"
echo "----------------------------------------------------------------------"
if kubectl apply -f test-deployments/compliant-deployment.yaml -n opa-strict-demo --dry-run=server &>/dev/null; then
    echo "‚úÖ PASS - New compliant deployment allowed in strict mode"
else
    echo "‚ùå FAIL - New compliant deployment blocked in strict mode"
fi

echo ""
echo "Test 5: CREATE new non-compliant deployment in strict mode (should fail)"
echo "-----------------------------------------------------------------------"
if kubectl create deployment strict-test-bad --image=nginx -n opa-strict-demo --dry-run=server &>/dev/null; then
    echo "‚ùå FAIL - New non-compliant deployment was allowed in strict mode"
else
    echo "‚úÖ PASS - New non-compliant deployment blocked in strict mode"
fi

echo ""
echo "Test 6: UPDATE existing non-compliant deployment in strict mode (should fail)"
echo "----------------------------------------------------------------------------"
current_replicas=$(kubectl get deployment test-non-compliant-app -n opa-strict-demo -o jsonpath='{.spec.replicas}' 2>/dev/null || echo "1")
new_replicas=$((current_replicas + 1))

if kubectl patch deployment test-non-compliant-app -n opa-strict-demo -p "{\"spec\":{\"replicas\":$new_replicas}}" --dry-run=server &>/dev/null; then
    echo "‚ùå FAIL - Existing non-compliant deployment update was allowed in strict mode"
else
    echo "‚úÖ PASS - Existing non-compliant deployment update blocked in strict mode"
    echo "üìã This enforces full compliance on all operations"
fi

show_section "ENTERPRISE ROLLOUT STRATEGY"

echo "üéØ Recommended ACME Payments Inc. Rollout Strategy:"
echo "=================================================="
echo ""
echo "Phase 1: LOOSE MODE (Weeks 1-4)"
echo "-------------------------------"
echo "‚Ä¢ Deploy loose mode constraints to all namespaces"
echo "‚Ä¢ Existing workloads continue to operate normally"
echo "‚Ä¢ New deployments must be compliant from day one"
echo "‚Ä¢ Teams have time to update existing deployments"
echo "‚Ä¢ Monitor violations and provide guidance"
echo ""
echo "Phase 2: MIGRATION PERIOD (Weeks 5-8)"
echo "-------------------------------------"
echo "‚Ä¢ Teams update existing deployments to add assetUuid labels"
echo "‚Ä¢ FinOps team provides support and tooling"
echo "‚Ä¢ Regular compliance reports show progress"
echo "‚Ä¢ Exemptions managed through centralized S3 storage"
echo ""
echo "Phase 3: STRICT MODE (Week 9+)"
echo "------------------------------"
echo "‚Ä¢ Switch to strict mode constraints"
echo "‚Ä¢ All operations require compliance"
echo "‚Ä¢ Full FinOps governance in effect"
echo "‚Ä¢ Continuous monitoring and reporting"
echo ""

echo "üíº Business Benefits:"
echo "===================="
echo "‚úÖ Zero downtime during policy rollout"
echo "‚úÖ Gradual migration reduces operational risk"
echo "‚úÖ New technical debt prevention from day one"
echo "‚úÖ Full compliance achieved within 8-9 weeks"
echo "‚úÖ Professional messaging guides developers"
echo "‚úÖ Centralized exemption management for special cases"

show_section "DEMO SUMMARY"

echo "üéâ Demo Results Summary:"
echo "========================"
echo ""
echo "LOOSE MODE (Rolling Deployment):"
echo "‚Ä¢ ‚úÖ New compliant deployments: ALLOWED"
echo "‚Ä¢ ‚ùå New non-compliant deployments: BLOCKED"
echo "‚Ä¢ ‚úÖ Updates to existing non-compliant: ALLOWED"
echo ""
echo "STRICT MODE (Full Enforcement):"
echo "‚Ä¢ ‚úÖ New compliant deployments: ALLOWED"
echo "‚Ä¢ ‚ùå New non-compliant deployments: BLOCKED"
echo "‚Ä¢ ‚ùå Updates to existing non-compliant: BLOCKED"
echo ""
echo "üìû ACME Payments Inc. Support:"
echo "‚Ä¢ FinOps Team: finops-team@acmepayments.com"
echo "‚Ä¢ Migration Support: migration-team@acmepayments.com"
echo "‚Ä¢ Emergency Escalation: finops-director@acmepayments.com"
echo ""
echo "üîß Next Steps:"
echo "‚Ä¢ Review current deployment compliance status"
echo "‚Ä¢ Plan migration timeline for existing workloads"
echo "‚Ä¢ Set up monitoring and reporting dashboards"
echo "‚Ä¢ Train development teams on new requirements"
