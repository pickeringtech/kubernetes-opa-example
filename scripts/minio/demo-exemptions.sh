#!/bin/bash

# ACME Payments Inc. - Interactive Exemption Demo
# Comprehensive demonstration of centralized exemption management

set -e

echo "üè¶ ACME Payments Inc. - Interactive Exemption Management Demo"
echo "============================================================="
echo "Demonstrating enterprise-grade centralized exemption control"
echo ""

# Check if MinIO is running
if ! kubectl get pods -n minio-system -l app=minio | grep -q Running; then
    echo "‚ùå MinIO is not running. Please run the enterprise demo setup first."
    echo "   Run: ./scripts/test-enterprise-demo.sh"
    exit 1
fi

echo "üéØ Demo Overview:"
echo "================="
echo "This demo showcases how ACME Payments Inc. manages FinOps exemptions"
echo "through centralized S3-compatible storage, eliminating self-exemption"
echo "and ensuring proper governance and audit trails."
echo ""

echo "üìã Step 1: Browse Current Exemption Storage"
echo "==========================================="
echo "Let's see what's currently stored in our S3-compatible MinIO storage:"
echo ""

./scripts/minio/list-exemptions.sh

echo ""
echo "üìÑ Step 2: Examine Loose Enforcement Exemptions"
echo "==============================================="
echo "Let's look at the detailed exemption data for loose enforcement:"
echo ""

./scripts/minio/read-exemption.sh loose-enforcement/exemptions.json

echo ""
echo "üìÑ Step 3: Examine Strict Enforcement Exemptions"
echo "================================================"
echo "Now let's see the more restrictive exemptions for strict enforcement:"
echo ""

./scripts/minio/read-exemption.sh strict-enforcement/exemptions.json

echo ""
echo "üîç Step 4: Demonstrate File Format and Structure"
echo "==============================================="
echo "Here's what makes our exemption system enterprise-grade:"
echo ""

echo "‚úÖ Key Features Demonstrated:"
echo "‚Ä¢ JSON-structured exemption data with full metadata"
echo "‚Ä¢ Approval workflows with responsible parties"
echo "‚Ä¢ Time-based exemptions with expiration dates"
echo "‚Ä¢ Audit trails with tickets and review dates"
echo "‚Ä¢ Cost impact tracking for FinOps analysis"
echo "‚Ä¢ Migration deadlines for existing deployments"
echo ""

echo "üö´ What Developers CAN'T Do (Security Features):"
echo "‚Ä¢ Self-exempt through annotations or labels"
echo "‚Ä¢ Modify exemption files directly"
echo "‚Ä¢ Bypass centralized approval process"
echo "‚Ä¢ Create permanent exemptions without review"
echo ""

echo "‚úÖ What FinOps Team CAN Do (Governance Features):"
echo "‚Ä¢ Centrally manage all exemptions"
echo "‚Ä¢ Set expiration dates and review cycles"
echo "‚Ä¢ Track cost impact and business justification"
echo "‚Ä¢ Maintain audit trails for compliance"
echo "‚Ä¢ Coordinate migration timelines"
echo ""

echo "üìä Step 5: Real-World Usage Scenarios"
echo "====================================="
echo ""

echo "Scenario A: Emergency Deployment"
echo "--------------------------------"
echo "‚Ä¢ Developer needs to deploy without assetUuid during incident"
echo "‚Ä¢ Contacts FinOps team via emergency escalation"
echo "‚Ä¢ FinOps team adds time-based exemption (24-48 hours)"
echo "‚Ä¢ Exemption includes incident ticket and approval"
echo "‚Ä¢ Automatic expiration forces compliance after emergency"
echo ""

echo "Scenario B: Legacy System Migration"
echo "-----------------------------------"
echo "‚Ä¢ Existing deployment lacks proper asset tagging"
echo "‚Ä¢ FinOps team grants existing deployment exemption"
echo "‚Ä¢ Includes migration deadline and cost impact"
echo "‚Ä¢ Regular review cycles ensure progress tracking"
echo "‚Ä¢ Exemption removed once migration complete"
echo ""

echo "Scenario C: Critical Infrastructure"
echo "-----------------------------------"
echo "‚Ä¢ Core payment processing system needs exemption"
echo "‚Ä¢ Requires security team and FinOps approval"
echo "‚Ä¢ Permanent exemption with quarterly reviews"
echo "‚Ä¢ High-level justification and risk assessment"
echo "‚Ä¢ Special handling for regulatory compliance"
echo ""

echo "üéâ Demo Summary"
echo "==============="
echo "This demonstration shows how ACME Payments Inc. achieves:"
echo ""
echo "üîí Security & Governance:"
echo "‚Ä¢ Centralized control over all policy exemptions"
echo "‚Ä¢ No self-exemption capabilities for developers"
echo "‚Ä¢ Proper approval workflows and authorization"
echo "‚Ä¢ Comprehensive audit trails for compliance"
echo ""
echo "üìä FinOps Excellence:"
echo "‚Ä¢ Cost impact tracking and analysis"
echo "‚Ä¢ Business justification requirements"
echo "‚Ä¢ Migration planning and deadlines"
echo "‚Ä¢ Regular review and renewal cycles"
echo ""
echo "üè¢ Enterprise Features:"
echo "‚Ä¢ S3-compatible storage for reliability"
echo "‚Ä¢ Professional violation messaging"
echo "‚Ä¢ Integration with ticketing systems"
echo "‚Ä¢ Escalation procedures for emergencies"
echo ""

echo "üìû Next Steps for Your Organization:"
echo "===================================="
echo "‚Ä¢ Customize exemption categories for your needs"
echo "‚Ä¢ Integrate with your ticketing/approval systems"
echo "‚Ä¢ Set up automated review and expiration workflows"
echo "‚Ä¢ Train teams on proper exemption request procedures"
echo "‚Ä¢ Establish governance policies and approval matrices"
echo ""

echo "üìß ACME Payments Inc. Contacts:"
echo "‚Ä¢ FinOps Team: finops-team@acmepayments.com"
echo "‚Ä¢ Emergency Escalation: finops-director@acmepayments.com"
echo "‚Ä¢ Documentation: https://wiki.acmepayments.com/finops"
echo "‚Ä¢ Training: https://training.acmepayments.com/finops-exemptions"
